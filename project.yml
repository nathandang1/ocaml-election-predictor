---
# Members of your group.
group:
  - name: Nathan Dang
    netid: nd432
  - name: Leon Huang
    netid: lyh7
  - name: Leon Jiao
    netid: lsj47
  - name: Andrew Kang
    netid: ayk36
  - name: Srivatsa Kundurthy
    netid: srk247
# Your PM.
pm:
  name: Alex Kozik
  netid: ajk333
# Set to false if you don't want your gallery entry to be public.
publish: false
# Pithy title
title: "The OCaml Election Outcome Simulator"
# OK if this is a Cornell Github link, but public gallery viewers won't be able to see it.
git-repo: "https://github.coecis.cornell.edu/ayk36/cs3110-final"
# If you have no demo screencast, replace the url string with an empty string ""
demo-video-url: ""
# Write a short, attention-grabbing description of your project.
desc: >
Our project is an election outcome simulator. It allows users to input a list 
of states, each with its own number of electoral votes and probability of 
voting for a given candidate. The simulator then runs a large number of 
simulations to determine the probability of each candidate winning the 
election. The simulator also allows users to input a list of states that have 
already been called, and it will update the probabilities accordingly. The 
simulator is written in OCaml and uses the Jane Street Core library for 
random number generation.
  Our project is an interactive calculator. It supports standard mathematical
  operations like addition, multiplication, negation, and division on both
  integers and floating-point numbers. The interface is completely
  programmable--new functions can easily be defined and assigned to new "keys"
  in the visual interface.

  Standard visual I/O is supported, but the calculator can also emit sound. By
  pressing down a special key, it can play a little melody.